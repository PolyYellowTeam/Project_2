package com.Entities;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Customers generated by hbm2java
 */
@Entity
@Table(name = "Customers", catalog = "Markito")
public class Customers {
	private int customerId;
	private Accounts accounts;
	private String customerName;
	private boolean gender;
	private Date birthday;
	private String email;
	private Integer phone;
	private String customerAddress;
	private Set<Carts> cartses = new HashSet<Carts>(0);
	
	public Customers() {
	}

	public Customers(int customerId, Accounts accounts, String customerName, boolean gender, String email) {
		this.customerId = customerId;
		this.accounts = accounts;
		this.customerName = customerName;
		this.gender = gender;
		this.email = email;
	}

	public Customers(Accounts accounts, String customerName, boolean gender, String email, int phone,
			String customerAddress) {
		this.accounts = accounts;
		this.customerName = customerName;
		this.gender = gender;
		this.email = email;
		this.phone = phone;
		this.customerAddress = customerAddress;
	}
	
	public Customers(int customerId, Accounts accounts, String customerName, boolean gender, Date birthday,
			String email, Integer phone, String customerAddress, Set<Carts> cartses) {
		this.customerId = customerId;
		this.accounts = accounts;
		this.customerName = customerName;
		this.gender = gender;
		this.birthday = birthday;
		this.email = email;
		this.phone = phone;
		this.customerAddress = customerAddress;
		this.cartses = cartses;
	}

	@Id
	@GeneratedValue
	@Column(name = "Customer_id", unique = true, nullable = false)
	public int getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(int customerId) {
		this.customerId = customerId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Username", unique = true, nullable = false)
	public Accounts getAccounts() {
		return this.accounts;
	}

	public void setAccounts(Accounts accounts) {
		this.accounts = accounts;
	}

	@Column(name = "Customer_name", nullable = false)
	public String getCustomerName() {
		return this.customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	@Column(name = "Gender", nullable = false)
	public boolean isGender() {
		return this.gender;
	}

	public void setGender(boolean gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Birthday", length = 23)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "Email", nullable = false, length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "Phone")
	public Integer getPhone() {
		return this.phone;
	}

	public void setPhone(Integer phone) {
		this.phone = phone;
	}

	@Column(name = "Customer_Address")
	public String getCustomerAddress() {
		return this.customerAddress;
	}

	public void setCustomerAddress(String customerAddress) {
		this.customerAddress = customerAddress;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "customers")
	public Set<Carts> getCartses() {
		return this.cartses;
	}

	public void setCartses(Set<Carts> cartses) {
		this.cartses = cartses;
	}

}
